{"ast":null,"code":"var _jsxFileName = \"/Users/rakhymzhan/front/event/src/components/Event/EventCreation/EventLocation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport YandexMap from \"../../Map/YandexMap\";\nimport { AutoComplete } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventLocation = () => {\n  _s();\n  const [vars, setVars] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  function handleChange(value) {\n    const apiKey = \"e6bf205f-4dce-4574-979d-9bba7be66812\";\n    const searchText = `город Астана, ул ${value}`;\n    const apiUrl = `https://suggest-maps.yandex.ru/v1/suggest?apikey=${apiKey}&text=${searchText}&types=house,street&results=10`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      const arr = data.results.filter(addr => addr.subtitle.text === \"Астана\");\n      console.log(arr);\n      const result = arr.map(address => {\n        return {\n          value: address.title.text,\n          label: address.title.text\n        };\n      });\n      setVars(result);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto w-[1000px] font-inter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-[40px] text-2xl border-b-[1px] border-b-gray-200\",\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        onSearch: handleChange,\n        options: vars,\n        onChange: value => setInputValue(value),\n        className: \"w-[500px] h-[50px] block outline-none bg-gray-100 rounded-[10px] my-[20px]\",\n        placeholder: \"Set Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YandexMap, {\n        x: 800,\n        y: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EventLocation, \"M4eC0nv5WUsB255yyadkwAXELYg=\");\n_c = EventLocation;\nexport default EventLocation;\n\n/*\n\n <input placeholder='Set location' className='w-[500px] h-[50px] block outline-none bg-gray-100 rounded-[10px] p-5 my-[20px]'\n                onChange={}\n                />\n */\nvar _c;\n$RefreshReg$(_c, \"EventLocation\");","map":{"version":3,"names":["React","useState","YandexMap","AutoComplete","jsxDEV","_jsxDEV","Fragment","_Fragment","EventLocation","_s","vars","setVars","inputValue","setInputValue","handleChange","value","apiKey","searchText","apiUrl","fetch","then","response","json","data","arr","results","filter","addr","subtitle","text","console","log","result","map","address","title","label","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","options","onChange","placeholder","x","y","_c","$RefreshReg$"],"sources":["/Users/rakhymzhan/front/event/src/components/Event/EventCreation/EventLocation.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport YandexMap from \"../../Map/YandexMap\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../stores/store\";\nimport {AutoComplete} from \"antd\";\n\ntype Yandex = {\n    value: string;\n    label: string;\n}\nconst EventLocation = () => {\n    const [vars, setVars] = useState<Yandex[]>([])\n    const [inputValue, setInputValue] = useState('');\n    function handleChange(value: string) {\n        const apiKey = \"e6bf205f-4dce-4574-979d-9bba7be66812\";\n        const searchText = `город Астана, ул ${value}`;\n        const apiUrl = `https://suggest-maps.yandex.ru/v1/suggest?apikey=${apiKey}&text=${searchText}&types=house,street&results=10`;\n\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then((data) => {\n                const arr = data.results.filter(\n                    (addr:any) => addr.subtitle.text === \"Астана\"\n                );\n                console.log(arr)\n                const result: Yandex[] = arr.map((address:any) => {\n                    return {\n                        value: address.title.text,\n                        label: address.title.text\n                    }\n                })\n                setVars(result)\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n            });\n    }\n\n    return (\n        <>\n            <div className='mx-auto w-[1000px] font-inter'>\n                <div className='w-full h-[40px] text-2xl border-b-[1px] border-b-gray-200'>Location</div>\n                <AutoComplete onSearch={handleChange} options={vars} onChange={(value) => setInputValue(value)} className='w-[500px] h-[50px] block outline-none bg-gray-100 rounded-[10px] my-[20px]' placeholder='Set Location' />\n                <YandexMap x={800} y={300}/>\n            </div>\n        </>\n    )\n}\n\nexport default EventLocation;\n\n/*\n\n <input placeholder='Set location' className='w-[500px] h-[50px] block outline-none bg-gray-100 rounded-[10px] p-5 my-[20px]'\n                onChange={}\n                />\n */"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAG3C,SAAQC,YAAY,QAAO,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMlC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,SAASa,YAAYA,CAACC,KAAa,EAAE;IACjC,MAAMC,MAAM,GAAG,sCAAsC;IACrD,MAAMC,UAAU,GAAI,oBAAmBF,KAAM,EAAC;IAC9C,MAAMG,MAAM,GAAI,oDAAmDF,MAAO,SAAQC,UAAW,gCAA+B;IAE5HE,KAAK,CAACD,MAAM,CAAC,CACRE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,MAAMC,GAAG,GAAGD,IAAI,CAACE,OAAO,CAACC,MAAM,CAC1BC,IAAQ,IAAKA,IAAI,CAACC,QAAQ,CAACC,IAAI,KAAK,QACzC,CAAC;MACDC,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;MAChB,MAAMQ,MAAgB,GAAGR,GAAG,CAACS,GAAG,CAAEC,OAAW,IAAK;QAC9C,OAAO;UACHnB,KAAK,EAAEmB,OAAO,CAACC,KAAK,CAACN,IAAI;UACzBO,KAAK,EAAEF,OAAO,CAACC,KAAK,CAACN;QACzB,CAAC;MACL,CAAC,CAAC;MACFlB,OAAO,CAACqB,MAAM,CAAC;IACnB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MACdR,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACV;EAEA,oBACIjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACIlC,OAAA;MAAKmC,SAAS,EAAC,+BAA+B;MAAAD,QAAA,gBAC1ClC,OAAA;QAAKmC,SAAS,EAAC,2DAA2D;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzFvC,OAAA,CAACF,YAAY;QAAC0C,QAAQ,EAAE/B,YAAa;QAACgC,OAAO,EAAEpC,IAAK;QAACqC,QAAQ,EAAGhC,KAAK,IAAKF,aAAa,CAACE,KAAK,CAAE;QAACyB,SAAS,EAAC,4EAA4E;QAACQ,WAAW,EAAC;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpNvC,OAAA,CAACH,SAAS;QAAC+C,CAAC,EAAE,GAAI;QAACC,CAAC,EAAE;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAnC,EAAA,CArCKD,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AAuCnB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AALA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}