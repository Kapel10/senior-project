{"ast":null,"code":"import axios from \"axios\";\nexport const suggestFunction = async () => {\n  const url = 'http://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address';\n  const token = '5e402b86a708e261e916f1f65c9d38bbb3c0ff7e';\n  const query = 'ул Туркестан 28/2';\n  const city = 'Астана';\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Token ${token}`\n    }\n  };\n  const data = {\n    query: query,\n    locations: [{\n      city: city,\n      country: \"*\"\n    }]\n  };\n  try {\n    const response = await axios.post(url, data, config);\n    console.log(response.data);\n    const lat = response.data.suggestions.geo_lat;\n    const long = response.data.geo_lon;\n    const house = response.data.house;\n    const street = response.data.street;\n    console.log('The address is ', street, house);\n    console.log('The coordinates are ', lat, long);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};","map":{"version":3,"names":["axios","suggestFunction","url","token","query","city","config","headers","Accept","Authorization","data","locations","country","response","post","console","log","lat","suggestions","geo_lat","long","geo_lon","house","street","error"],"sources":["/Users/rakhymzhan/front/event/src/components/Map/MapUtil.ts"],"sourcesContent":["import axios from \"axios\";\n\nexport const suggestFunction = async() => {\n    const url  = 'http://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address';\n    const token = '5e402b86a708e261e916f1f65c9d38bbb3c0ff7e';\n    const query = 'ул Туркестан 28/2';\n    const city = 'Астана';\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n    };\n    const data = {\n        query: query,\n        locations: [\n            {\n                city: city,\n                country: \"*\",\n            },\n        ],\n    };\n\n    try {\n        const response = await axios.post(url, data, config);\n        console.log(response.data);\n        const lat = response.data.suggestions.geo_lat;\n        const long = response.data.geo_lon;\n        const house = response.data.house;\n        const street = response.data.street;\n        console.log('The address is ', street,house)\n        console.log('The coordinates are ', lat, long)\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAW;EACtC,MAAMC,GAAG,GAAI,qEAAqE;EAClF,MAAMC,KAAK,GAAG,0CAA0C;EACxD,MAAMC,KAAK,GAAG,mBAAmB;EACjC,MAAMC,IAAI,GAAG,QAAQ;EACrB,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAG,SAAQN,KAAM;IAClC;EACJ,CAAC;EACD,MAAMO,IAAI,GAAG;IACTN,KAAK,EAAEA,KAAK;IACZO,SAAS,EAAE,CACP;MACIN,IAAI,EAAEA,IAAI;MACVO,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACZ,GAAG,EAAEQ,IAAI,EAAEJ,MAAM,CAAC;IACpDS,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACH,IAAI,CAAC;IAC1B,MAAMO,GAAG,GAAGJ,QAAQ,CAACH,IAAI,CAACQ,WAAW,CAACC,OAAO;IAC7C,MAAMC,IAAI,GAAGP,QAAQ,CAACH,IAAI,CAACW,OAAO;IAClC,MAAMC,KAAK,GAAGT,QAAQ,CAACH,IAAI,CAACY,KAAK;IACjC,MAAMC,MAAM,GAAGV,QAAQ,CAACH,IAAI,CAACa,MAAM;IACnCR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEO,MAAM,EAACD,KAAK,CAAC;IAC5CP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,GAAG,EAAEG,IAAI,CAAC;EAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZT,OAAO,CAACS,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}